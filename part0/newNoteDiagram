sequenceDiagram
  participant browser
  participant server
  
  browser->>server: POST https://studies.cs.helsinki.fi/exampleapp/new_note
  activate server
  server-->>browser: 302 redirect to /exampleapp/notes
  deactivate server
  
  Note right of browser: The server executes the code that handles the POST request, creating a new note object using the data provided in the body of the request and pushing it to the notes array. 
  
  Note right of browser: Unless I fundamentally misunderstood something, I'm pretty sure that everything below this point is identical to the original example of loading up the list of notes, just with the user's new note included in the rendered notes. So if it seems like I just copy and pasted the below lines from the example sequence diagram, it's because I did :)
  
    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/notes
    activate server
    server-->>browser: HTML document
    deactivate server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/main.css
    activate server
    server-->>browser: the css file
    deactivate server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/main.js
    activate server
    server-->>browser: the JavaScript file
    deactivate server

    Note right of browser: The browser starts executing the JavaScript code that fetches the JSON from the server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/data.json
    activate server
    server-->>browser: [{ "content": "HTML is easy", "date": "2023-1-1" }, ... ]
    deactivate server

    Note right of browser: The browser executes the callback function that renders the notes
